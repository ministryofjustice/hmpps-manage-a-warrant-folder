/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/legacy/adjustments/{adjustmentId}': {
    get: operations['get']
    put: operations['update']
    delete: operations['delete']
  }
  '/adjustments/{adjustmentId}': {
    get: operations['get_1']
    put: operations['update_1']
    delete: operations['delete_1']
  }
  '/legacy/adjustments': {
    post: operations['create']
  }
  '/adjustments': {
    get: operations['findByPerson']
    post: operations['create_1']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    LegacyAdjustment: {
      /** Format: int64 */
      bookingId: number
      /** Format: int32 */
      sentenceSequence?: number
      offenderId: string
      /** @enum {string} */
      adjustmentType: 'ADA' | 'RADA' | 'UAL' | 'LAL' | 'SREM' | 'RSR' | 'RST' | 'RX' | 'S240A' | 'UR'
      /** Format: date */
      adjustmentDate?: string
      /** Format: date */
      adjustmentFromDate?: string
      /** Format: int32 */
      adjustmentDays: number
      comment?: string
      active: boolean
    }
    AdjustmentDetailsDto: {
      /** Format: int64 */
      bookingId: number
      /** Format: int32 */
      sentenceSequence?: number
      person: string
      /** @enum {string} */
      adjustmentType:
        | 'REMAND'
        | 'TAGGED_BAIL'
        | 'UNLAWFULLY_AT_LARGE'
        | 'LAWFULLY_AT_LARGE'
        | 'ADDITIONAL_DAYS_AWARDED'
        | 'RESTORATION_OF_ADDITIONAL_DAYS_AWARDED'
        | 'SPECIAL_REMISSION'
      /** Format: date */
      toDate?: string
      /** Format: date */
      fromDate: string
      /** Format: int32 */
      days?: number
    }
    LegacyAdjustmentCreatedResponse: {
      /** Format: uuid */
      adjustmentId: string
    }
    CreateResponseDto: {
      /** Format: uuid */
      adjustmentId: string
    }
    AdjustmentDto: {
      /** Format: uuid */
      id: string
      adjustment: components['schemas']['AdjustmentDetailsDto']
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  get: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['LegacyAdjustment']
        }
      }
    }
  }
  update: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    requestBody: {
      content: {
        'application/vnd.nomis-offence+json': components['schemas']['LegacyAdjustment']
      }
    }
    responses: {
      /** @description OK */
      200: never
    }
  }
  delete: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    responses: {
      /** @description OK */
      200: never
    }
  }
  get_1: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['AdjustmentDetailsDto']
        }
      }
    }
  }
  update_1: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdjustmentDetailsDto']
      }
    }
    responses: {
      /** @description OK */
      200: never
    }
  }
  delete_1: {
    parameters: {
      path: {
        adjustmentId: string
      }
    }
    responses: {
      /** @description OK */
      200: never
    }
  }
  create: {
    requestBody: {
      content: {
        'application/vnd.nomis-offence+json': components['schemas']['LegacyAdjustment']
      }
    }
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['LegacyAdjustmentCreatedResponse']
        }
      }
    }
  }
  findByPerson: {
    parameters: {
      query: {
        person: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['AdjustmentDto'][]
        }
      }
    }
  }
  create_1: {
    requestBody: {
      content: {
        'application/json': components['schemas']['AdjustmentDetailsDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        content: {
          'application/json': components['schemas']['CreateResponseDto']
        }
      }
    }
  }
}
